// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activity {
  id         Int      @id @default(autoincrement())
  activityID String   @unique
  title      String   @db.VarChar(250)
  desc       String?  @db.VarChar(1000)
  images     Json?    @db.Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("activities")
}

model announcement {
  id             Int      @id @default(autoincrement())
  announcementID String   @unique
  title          String   @db.VarChar(250)
  desc           String?  @db.VarChar(1000)
  images         Json?    @db.Json
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("announcements")
}

model socmed {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(250)
  link      String   @db.VarChar(1000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("socmeds")
}

model profile {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(250)
  desc      String?  @db.VarChar(1000)
  images    Json?    @db.Json()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model loker {
  id               String             @id @unique
  name             String             @db.VarChar(250)
  desc             String?            @db.VarChar(1000)
  dateStart        DateTime?          @db.DateTime()
  dateEnd          DateTime?          @db.DateTime()
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  applicationLoker applicationLoker[]

  @@map("lokers")
}

model magang {
  id                String              @id @unique
  name              String              @db.VarChar(250)
  desc              String?             @db.VarChar(1000)
  dateStart         DateTime?           @db.DateTime()
  dateEnd           DateTime?           @db.DateTime()
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  applicationMagang applicationMagang[]

  @@map("magangs")
}

model applicationLoker {
  id         String   @id @unique
  email      String   @db.VarChar(100)
  fullName   String   @db.VarChar(250)
  loker      loker    @relation(fields: [lokerId], references: [id])
  lokerId    String
  sekolah    String   @db.VarChar(500)
  jurusan    String   @db.VarChar(500)
  jenjang    String   @db.VarChar(100)
  address    String   @db.VarChar(1000)
  fileResume String   @db.VarChar(500)
  fileApply  String   @db.VarChar(500)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("applicationLokers")
}

model applicationMagang {
  id         String   @id @unique
  email      String   @db.VarChar(100)
  fullName   String   @db.VarChar(250)
  magang     magang   @relation(fields: [magangId], references: [id])
  magangId   String
  sekolah    String   @db.VarChar(500)
  jurusan    String   @db.VarChar(500)
  jenjang    String   @db.VarChar(100)
  address    String   @db.VarChar(1000)
  fileResume String   @db.VarChar(500)
  fileApply  String   @db.VarChar(500)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("applicationMagangs")
}
